#!/usr/bin/env bash

# hist - Bash history supertool
# Location: ~/.bin/hist (make sure it's in $PATH)
# Requires: git, grep, sort, less
# Optional: fzf, rg, bat

# Use GNU awk if available (especially on macOS)
AWK=awk
if [[ "$OSTYPE" == "darwin"* ]]; then
  if command -v gawk >/dev/null 2>&1; then
    AWK=gawk
  else
    echo "[hist] Error: GNU awk (gawk) is required on macOS. Please install it with:"
    echo "  brew install gawk"
    exit 1
  fi
fi

HIST_DIR="${HOME}/.history"
HOSTNAME_SHORT=$(hostname | cut -d '.' -f 1 | tr '[:upper:]' '[:lower:]')
DATE_FMT="%Y-%m-%d %H:%M"  # e.g., "Jul 19 12:43"

hist_usage() {
    echo "Usage: hist {recent|grep|push} [args...]"
    echo
    echo "Subcommands:"
    echo "  recent       Show most recent commands on this machine"
    echo "               Options: --all, -a  Include all machines"
    echo
    echo "  grep <term>  Search command history"
    echo "               Options: --all, -a  Search across all machines"
    echo
    echo "  sync         Commit & push .history git repo. Also pulls latest changes."
}

hist_parse_and_print() {
    local terms=()
    local files=()
    local date_fmt="%Y-%m-%d %H:%M"
    local awk_file="$(dirname "$0")/hist.search.awk"

    while [[ "$1" != "--" && "$#" -gt 0 ]]; do
        terms+=("$1")
        shift
    done
    shift  # skip the "--"

    files=("$@")

    local SEARCH_TERMS=$(IFS=$'\t'; echo "${terms[*]}")

    page_on_terminal() {
        if [[ -t 1 ]]; then
            less -FR +G "$@"
        else
            cat "$@"
        fi
    }

    $AWK -v DATE_FMT="$date_fmt" -v TERMS="$SEARCH_TERMS" -f "$awk_file" "${files[@]}" |
        sort | page_on_terminal
}




hist_recent() {
    local all=0
    [[ "$1" == "--all" || "$1" == "-a" ]] && all=1

    local files
    local search_dir
    if [[ "$all" -eq 1 ]]; then
        search_dir="$HIST_DIR"
    else
        search_dir="$HIST_DIR/$HOSTNAME_SHORT"
    fi
    files=$(find "$search_dir" -type f ! -path '*/.git/*')

    hist_parse_and_print "" -- $files
}

hist_grep() {
    local all=0
    local terms=()

    while [[ "$1" =~ ^- ]]; do
        case "$1" in
            --all|-a) all=1 ;;
            *) echo "Unknown option: $1" && return 1 ;;
        esac
        shift
    done

    # All remaining args are search terms
    if [[ $# -eq 0 ]]; then
        echo "Usage: hist grep [--all] <term1> [term2...]"
        return 1
    fi
    terms=("$@")

    local files
    local search_dir
    if [[ "$all" -eq 1 ]]; then
        search_dir="$HIST_DIR"
    else
        search_dir="$HIST_DIR/$HOSTNAME_SHORT"
    fi
    files=$(find "$search_dir" -type f ! -path '*/.git/*')

    echo "Searching history for terms: ${terms[*]}"

    hist_parse_and_print "${terms[@]}" -- $files
}


hist_sync() {
    cd "$HIST_DIR" || { echo "Cannot access $HIST_DIR"; return 1; }
    git add .
    git commit -m "Auto-history push from $HOSTNAME_SHORT $(date)"
    git pull || { echo "Failed to pull latest changes"; return 1; }
    git push
}

# Main entrypoint
case "$1" in
    help|--help|-h)
        hist_usage
        ;;
    grep)
        shift
        hist_grep "$@"
        ;;
    sync|push)
        hist_sync
        ;;
    recent|*)
        shift
        hist_recent "$@"
        ;;
esac
